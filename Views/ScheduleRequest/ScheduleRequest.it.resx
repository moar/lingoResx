<?xml version="1.0" encoding="UTF-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element msdata:IsDataSet="true" name="root">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
                <xsd:element minOccurs="0" msdata:Ordinal="2" name="comment" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute msdata:Ordinal="1" name="name" type="xsd:string" use="required"/>
              <xsd:attribute msdata:Ordinal="3" name="type" type="xsd:string"/>
              <xsd:attribute msdata:Ordinal="4" name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GoToRequest" xml:space="preserve">
    <value>Vai alla richiesta</value>
  </data>
  <data name="ReqConversation" xml:space="preserve">
    <value>Richiedere una conversazione</value>
  </data>
  <data name="SchAddLang" xml:space="preserve">
    <value>Se vuoi inviare una richiesta per praticare {0} è necessario includere la lingua nel tuo profilo</value>
  </data>
  <data name="SchBothLegend" xml:space="preserve">
    <value>disponibile per conversazione di pagamento e banca del tempo</value>
  </data>
  <data name="SchCheckMail" xml:space="preserve">
    <value>Voglio ricevere un'e-mail se {0} accetta mia richiesta</value>
  </data>
  <data name="SchCondDurSummary" xml:space="preserve">
    <value>Durata della conversazione</value>
  </data>
  <data name="SchConfirmReq" xml:space="preserve">
    <value>Conferma la tua richiesta</value>
  </data>
  <data name="SchConvDateSummary" xml:space="preserve">
    <value>Data della conversazione</value>
  </data>
  <data name="SchConvLangSummary" xml:space="preserve">
    <value> lingua della conversazione</value>
  </data>
  <data name="SchConvTypeQuest" xml:space="preserve">
    <value>Preferisci una conversazione di pagamento o di banca del tempo?</value>
  </data>
  <data name="SchConvTypeSummary" xml:space="preserve">
    <value>Tipo di conversazione</value>
  </data>
  <data name="SchEmptyMess" xml:space="preserve">
    <value>Non è possibile inviare messaggi vuoti</value>
  </data>
  <data name="SchLangQuest" xml:space="preserve">
    <value>In quale lingua vuoi parlare con {0}?</value>
  </data>
  <data name="SchMessDesc" xml:space="preserve">
    <value>Per esempio, ti puoi offrire a praticare altre lingue, o chiedere per il suo tasso di pagamento per i colloqui</value>
  </data>
  <data name="SchMessMaxLengh" xml:space="preserve">
    <value>Il messaggio non può superare {1} caratteri</value>
  </data>
  <data name="SchMessPH" xml:space="preserve">
    <value>Lunghezza massima: 280 caratteri</value>
  </data>
  <data name="SchMessQuest" xml:space="preserve">
    <value>Vuoi inviare un messaggio a {0}?</value>
  </data>
  <data name="SchNoAvailable" xml:space="preserve">
    <value>{{: NativeName}} non è disponibile questa settimana. Potete guardare altre settimane</value>
  </data>
  <data name="SchPaidConv" xml:space="preserve">
    <value>Conversazione pagamento</value>
  </data>
  <data name="SchReqConv" xml:space="preserve">
    <value>Richiedi una conversazione</value>
  </data>
  <data name="SchSelectDateVal" xml:space="preserve">
    <value>Seleziona la data e l'ora della conversazione sul calendario</value>
  </data>
  <data name="SchSelectLangVal" xml:space="preserve">
    <value>Selezionare la lingua della conversazione</value>
  </data>
  <data name="SchSimulConv" xml:space="preserve">
    <value>Hai un'altra conversazione allo stesso tempo</value>
  </data>
  <data name="SchSimulReqs" xml:space="preserve">
    <value>Non si possono fare due richieste di conversazione per lo stesso tempo</value>
  </data>
  <data name="SchSimulReqsMax" xml:space="preserve">
    <value>Non si può avere più di {0} richieste risposta in attesa</value>
  </data>
  <data name="SchStepsTitle" xml:space="preserve">
    <value>Segue questi passi per fare la prenotazione</value>
  </data>
  <data name="SchSubmitReq" xml:space="preserve">
    <value>Invia richiesta</value>
  </data>
  <data name="SchTBConv" xml:space="preserve">
    <value>Banca del Tempo</value>
  </data>
  <data name="SchTBLegend" xml:space="preserve">
    <value>disponibile per banca del tempo</value>
  </data>
  <data name="SchTodaysRate" xml:space="preserve">
    <value>Tasso di oggi</value>
  </data>
  <data name="SchUndefined" xml:space="preserve">
    <value>Senza definire </value>
  </data>
  <data name="SchUnselected" xml:space="preserve">
    <value>Non selezionato</value>
  </data>
  <data name="SchWalletInfo1" xml:space="preserve">
    <value>Il tasso di oggi è solo informativo. Prima di iniziare la videochiamata con {0} si può decidere di annullare, se non sei d'accordo con il tasso finale</value>
  </data>
  <data name="SchWalletInfo2" xml:space="preserve">
    <value>Si paga solo per la durata esatta della chiamata video, e in caso di cancellazione entro i primi 3 minuti non si caricherà</value>
  </data>
  <data name="SchWalletLegend" xml:space="preserve">
    <value>disponibile per conversazioni a pagamento</value>
  </data>
  <data name="SchWantNotify" xml:space="preserve">
    <value>Vuoi ricevere una notifica quando {{: NativeName}}  renda pubblica sua disponibilità?</value>
  </data>
  <data name="SchWhenDesc" xml:space="preserve">
    <value>Seleziona la data, l'ora e la durata della conversazione cliccando e trascinando su uno qualsiasi dei posti disponibili nel calendario (Tempo massimo: 2 ore)</value>
  </data>
  <data name="SchWhenDescTouch" xml:space="preserve">
    <value>Seleziona la data, l'ora e la durata della conversazione facendo clic (tenere premuto il tasto per un secondo) e trascinando in qualsiasi slot disponibile nell'agenda (Max Tempo: 2 ore).</value>
  </data>
  <data name="SchWhenQuest" xml:space="preserve">
    <value>Quando vuoi avere la conversazione?</value>
  </data>
  <data name="SchWillNotify" xml:space="preserve">
    <value>In ogni caso, si riceverà una notifica quando {{:NativeName}} renda pubblica la loro disponibilità</value>
  </data>
</root>
