<?xml version="1.0" encoding="UTF-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element msdata:IsDataSet="true" name="root">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
                <xsd:element minOccurs="0" msdata:Ordinal="2" name="comment" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute msdata:Ordinal="1" name="name" type="xsd:string" use="required"/>
              <xsd:attribute msdata:Ordinal="3" name="type" type="xsd:string"/>
              <xsd:attribute msdata:Ordinal="4" name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GoToRequest" xml:space="preserve">
    <value>Ir a la solicitud</value>
  </data>
  <data name="ReqConversation" xml:space="preserve">
    <value>Solicitar una conversación</value>
  </data>
  <data name="SchAddLang" xml:space="preserve">
    <value>Si quieres enviar una solicitud para practicar {0} tienes que incluir el idioma en tu perfil</value>
  </data>
  <data name="SchBothLegend" xml:space="preserve">
    <value>disponible para conversación de pago y de banco de tiempo</value>
  </data>
  <data name="SchCheckMail" xml:space="preserve">
    <value>Quiero recibir un correo electrónico si {0} acepta mi solicitud</value>
  </data>
  <data name="SchCondDurSummary" xml:space="preserve">
    <value>Duración de la conversación</value>
  </data>
  <data name="SchConfirmReq" xml:space="preserve">
    <value>Confirma tu solicitud</value>
  </data>
  <data name="SchConvDateSummary" xml:space="preserve">
    <value>Fecha de la conversación</value>
  </data>
  <data name="SchConvLangSummary" xml:space="preserve">
    <value>Idioma de la conversación</value>
  </data>
  <data name="SchConvTypeQuest" xml:space="preserve">
    <value>¿Quieres una conversación de pago, o de banco de tiempo?</value>
  </data>
  <data name="SchConvTypeSummary" xml:space="preserve">
    <value>Tipo de conversación</value>
  </data>
  <data name="SchEmptyMess" xml:space="preserve">
    <value>No puedes enviar mensajes vacíos</value>
  </data>
  <data name="SchLangQuest" xml:space="preserve">
    <value>¿En qué idioma quieres hablar con {0}?</value>
  </data>
  <data name="SchMessDesc" xml:space="preserve">
    <value>Por ejemplo, podrías ofrecerte para practicar otros idiomas, o preguntarle por su tarifa para conversaciones de pago</value>
  </data>
  <data name="SchMessMaxLengh" xml:space="preserve">
    <value>El mensaje no puede tener más de {1} caracteres</value>
  </data>
  <data name="SchMessPH" xml:space="preserve">
    <value>Longitud máxima: 280 caracteres</value>
  </data>
  <data name="SchMessQuest" xml:space="preserve">
    <value>¿Quieres enviarle un mensaje a {0}?</value>
  </data>
  <data name="SchNoAvailable" xml:space="preserve">
    <value>{{:NativeName}} no está disponible esta semana. Puedes mirar en otras semanas</value>
  </data>
  <data name="SchPaidConv" xml:space="preserve">
    <value>Conversación de pago</value>
  </data>
  <data name="SchReqConv" xml:space="preserve">
    <value>Solicitar una conversación</value>
  </data>
  <data name="SchSelectDateVal" xml:space="preserve">
    <value>Selecciona la fecha y hora de la conversación en el calendario</value>
  </data>
  <data name="SchSelectLangVal" xml:space="preserve">
    <value>Selecciona el idioma de la conversación</value>
  </data>
  <data name="SchSimulConv" xml:space="preserve">
    <value>Tienes otra conversación a la misma hora</value>
  </data>
  <data name="SchSimulReqs" xml:space="preserve">
    <value>Tienes otra solicitud pendiente de contestación para la misma hora</value>
  </data>
  <data name="SchSimulReqsMax" xml:space="preserve">
    <value>No puedes tener más de {0} solicitudes pendientes de contestación</value>
  </data>
  <data name="SchStepsTitle" xml:space="preserve">
    <value>Sigue estos pasos para hacer tu reserva</value>
  </data>
  <data name="SchSubmitReq" xml:space="preserve">
    <value>Enviar solicitud</value>
  </data>
  <data name="SchTBConv" xml:space="preserve">
    <value>Banco de tiempo</value>
  </data>
  <data name="SchTBLegend" xml:space="preserve">
    <value>disponible para banco de tiempo</value>
  </data>
  <data name="SchTodaysRate" xml:space="preserve">
    <value>Tarifa de hoy</value>
  </data>
  <data name="SchUndefined" xml:space="preserve">
    <value>Sin definir</value>
  </data>
  <data name="SchUnselected" xml:space="preserve">
    <value>Sin seleccionar</value>
  </data>
  <data name="SchWalletInfo1" xml:space="preserve">
    <value>La tarifa de hoy es solamente informativa. Antes de empezar la videollamada con {0} puedes decidir cancelarla en caso de que no estés de acuerdo con su tarifa final</value>
  </data>
  <data name="SchWalletInfo2" xml:space="preserve">
    <value>Sólo pagarás por la duración exacta de la videollamada, y si la cancelas durante los primeros 3 minutos no te cobrará</value>
  </data>
  <data name="SchWalletLegend" xml:space="preserve">
    <value>disponible para conversaciones de pago</value>
  </data>
  <data name="SchWantNotify" xml:space="preserve">
    <value>¿Quieres recibir una notificación cuando {{:NativeName}} haga pública su disponibilidad?</value>
  </data>
  <data name="SchWhenDesc" xml:space="preserve">
    <value>Selecciona la fecha, hora y duración de la conversación clicando y arrastrando sobre cualquiera de las franjas disponibles en el calendario (Tiempo máximo:2 horas)</value>
  </data>
  <data name="SchWhenDescTouch" xml:space="preserve">
    <value>Elige la fecha, hora y duración de la conversación clicando (mantén el click durante un segundo) y arrasatrando sobre cualquier ranura disponible en la agenda (Tiempo máx: 2 horas)</value>
  </data>
  <data name="SchWhenQuest" xml:space="preserve">
    <value>¿Cuándo quieres tener la conversación?</value>
  </data>
  <data name="SchWillNotify" xml:space="preserve">
    <value>En cualquier caso, recibirás una notificación cuando {{:NativeName}} haga pública su disponibilidad</value>
  </data>
</root>
