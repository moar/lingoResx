<?xml version="1.0" encoding="UTF-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element msdata:IsDataSet="true" name="root">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
                <xsd:element minOccurs="0" msdata:Ordinal="2" name="comment" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute msdata:Ordinal="1" name="name" type="xsd:string" use="required"/>
              <xsd:attribute msdata:Ordinal="3" name="type" type="xsd:string"/>
              <xsd:attribute msdata:Ordinal="4" name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptReschedule" xml:space="preserve">
    <value>Accetta </value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Attive </value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Tutti</value>
  </data>
  <data name="AllCancelled" xml:space="preserve">
    <value>Annullate</value>
  </data>
  <data name="AllCompleted" xml:space="preserve">
    <value>Completato</value>
  </data>
  <data name="AllConfirmed" xml:space="preserve">
    <value>Confermate</value>
  </data>
  <data name="AllRejected" xml:space="preserve">
    <value> Rifiutate</value>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>cancellata</value>
  </data>
  <data name="CancelReschedule" xml:space="preserve">
    <value>Cancellare</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completata</value>
  </data>
  <data name="Confirmed" xml:space="preserve">
    <value>Confermata</value>
  </data>
  <data name="ConfirmNewDate" xml:space="preserve">
    <value>Conferma la nuova data</value>
  </data>
  <data name="CurrentDate" xml:space="preserve">
    <value>Data attuale</value>
  </data>
  <data name="Lessons" xml:space="preserve">
    <value>lezioni</value>
  </data>
  <data name="LessonsLang" xml:space="preserve">
    <value>Lezioni di {0} </value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progresso</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Tariffa</value>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>Rifiutata</value>
  </data>
  <data name="RejectReschedule" xml:space="preserve">
    <value>Rifiutare</value>
  </data>
  <data name="ScheduledLessons" xml:space="preserve">
    <value>Lezioni programmate</value>
  </data>
  <data name="SelectNewDate" xml:space="preserve">
    <value>Seleziona la nuova data</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Stato</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Totale</value>
  </data>
  <data name="Unconfirmed" xml:space="preserve">
    <value>Senza confirmare</value>
  </data>
  <data name="ViewBy" xml:space="preserve">
    <value>Visualizza</value>
  </data>
  <data name="Reschedule" xml:space="preserve">
    <value>Riprogrammare</value>
  </data>
  <data name="Unschedule" xml:space="preserve">
    <value>Deprogrammare</value>
  </data>
  <data name="CancelUnschedule" xml:space="preserve">
    <value>Annullare la deprogrammazione</value>
  </data>
  <data name="AcceptUnschedule" xml:space="preserve">
    <value>Accettare</value>
  </data>
  <data name="RejectUnschedule" xml:space="preserve">
    <value>Rifiutare</value>
  </data>
  <data name="ReportIssue" xml:space="preserve">
    <value>Segnalare un problema</value>
  </data>
  <data name="SelectReportIssues" xml:space="preserve">
    <value>Selezionare almeno un problema da segnalare</value>
  </data>
  <data name="TeCollectSolution" xml:space="preserve">
    <value>Contrassegnare la lezione come completata (e addebitare il 100%)</value>
  </data>
  <data name="CommentIssueStudent" xml:space="preserve">
    <value>Aggiungi ulteriori dettagli sul problema (i commenti saranno inviati al tuo insegnante)</value>
  </data>
  <data name="CommentIssueTeacher" xml:space="preserve">
    <value>Aggiungi ulteriori dettagli sul problema (i commenti saranno inviati allo studente)
</value>
  </data>
  <data name="HowSolveIssue" xml:space="preserve">
    <value>Come vorresti risolvere questo problema?</value>
  </data>
  <data name="OtherIssue" xml:space="preserve">
    <value>Altro</value>
  </data>
  <data name="RescheduleSolution" xml:space="preserve">
    <value>Riprogrammare la lezione</value>
  </data>
  <data name="StudentEarlyIssue" xml:space="preserve">
    <value>Lo studente se ne andò presto</value>
  </data>
  <data name="StudentLateIssue" xml:space="preserve">
    <value>Lo studente è arrivato in ritardo</value>
  </data>
  <data name="StudentMissedIssue" xml:space="preserve">
    <value>Studente non si è presentato per la lezione</value>
  </data>
  <data name="StudentTechnicalIssue" xml:space="preserve">
    <value>Lo studente ha avuto problemi tecnici</value>
  </data>
  <data name="TeacherEarlyIssue" xml:space="preserve">
    <value>L'insegnante se ne andò presto</value>
  </data>
  <data name="TeacherLateIssue" xml:space="preserve">
    <value>L'insegnante è arrivato in ritardo</value>
  </data>
  <data name="TeacherMissedIssue" xml:space="preserve">
    <value>L'Insegnante non si presentò per la lezione</value>
  </data>
  <data name="TeacherTechnicalIssue" xml:space="preserve">
    <value>Il professore ha avuto problemi tecnici</value>
  </data>
  <data name="TeCancelAndRefundHalfSolution" xml:space="preserve">
    <value>Cancellare la lezione (e restituire il 50%)</value>
  </data>
  <data name="TeCancelAndRefundSolution" xml:space="preserve">
    <value>Cancellare la lezione (e restituire il 100%)</value>
  </data>
  <data name="TeCollectHalfSolution" xml:space="preserve">
    <value>Contrassegna la lezione come Completata (e carica il 50%)</value>
  </data>
  <data name="CancelReport" xml:space="preserve">
    <value>Cancellare report</value>
  </data>
  <data name="StuCancelAndRefundHalfSolution" xml:space="preserve">
    <value>Cancella lezione (rimborso 50%)</value>
  </data>
  <data name="StuCancelAndRefundSolution" xml:space="preserve">
    <value>Cancella lezione (rimborso 100%)</value>
  </data>
  <data name="StuCollectHalfSolution" xml:space="preserve">
    <value>Segnare la classe come completata. (50% da pagare)</value>
  </data>
  <data name="StuCollectSolution" xml:space="preserve">
    <value>Contrassegnare la classe come completata (sarà versato il 100%)</value>
  </data>
  <data name="CompleteLesson" xml:space="preserve">
    <value>Completare lezione</value>
  </data>
  <data name="AcceptSolution" xml:space="preserve">
    <value>Accettare soluzione</value>
  </data>
  <data name="LessonPackCompleted" xml:space="preserve">
    <value>Il pacchetto di lezioni è ora completo</value>
  </data>
  <data name="RejectSolution" xml:space="preserve">
    <value>Rifiutare soluzione</value>
  </data>
  <data name="CancelledPlural" xml:space="preserve">
    <value>Cancellate</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Prezzo</value>
  </data>
  <data name="Refund" xml:space="preserve">
    <value>Rimborso</value>
  </data>
  <data name="Refunds" xml:space="preserve">
    <value>Rimborsi</value>
  </data>
  <data name="CancelMediation" xml:space="preserve">
    <value>Cancellare la mediazione</value>
  </data>
  <data name="RequestMediation" xml:space="preserve">
    <value>Richiedi mediazione</value>
  </data>
  <data name="StudentRequestedMediation" xml:space="preserve">
    <value>Lo studente ha richiesto la mediazione per risolvere un problema. Il team di Langademy ti contatterà</value>
  </data>
  <data name="TeacherRequestedMediation" xml:space="preserve">
    <value>L'insegnante ha richiesto la mediazione per risolvere un problema. Il team di Langademy ti contatterà</value>
  </data>
  <data name="YouRequestedMediation" xml:space="preserve">
    <value>Hai chiesto la mediazione per risolvere un problema. Il team di Langademy ti contatterà</value>
  </data>
  <data name="MedDisagreementStudent" xml:space="preserve">
    <value>Perché il tuo insegnante non è d'accordo con la tua soluzione?</value>
  </data>
  <data name="MedDisagreementTeacher" xml:space="preserve">
    <value>Perché il tuo studente non è d'accordo con la tua soluzione?</value>
  </data>
  <data name="MedIntroStudent" xml:space="preserve">
    <value>Se hai avuto problemi con questa lezione e non sei riuscito a trovare una soluzione con il tuo insegnante utilizzando la funzione Segnala Problemi, puoi richiedere la mediazione di Langademy. La decisione del nostro team sarà definitiva. Si prega di compilare il seguente formulario e vi contatteremo (ricorda che il vostro insegnante vedrà anche quello che scrivete)</value>
  </data>
  <data name="MedIntroTeacher" xml:space="preserve">
    <value>Se avete avuto problemi con questa lezione e non siete riusciti a trovare una soluzione con il vostro studente utilizzando la funzione Segnala Problema, potete chiedere la mediazione di Langademy. La decisione del nostro team sarà definitiva. Compila il seguente modulo e ti contatteremo (tieni presente che il tuo studente vedrà anche quello che scriverai)</value>
  </data>
  <data name="MedIssueDescr" xml:space="preserve">
    <value>Descrivi il problema per il quale hai bisogno di mediazione</value>
  </data>
  <data name="MedProposedSol" xml:space="preserve">
    <value>Quale soluzione proponi?</value>
  </data>
  <data name="LessonsUpper" xml:space="preserve">
    <value>Lezioni</value>
  </data>
</root>
