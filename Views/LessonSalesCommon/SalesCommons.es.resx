<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptReschedule" xml:space="preserve">
    <value>Aceptar</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Activas</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Todas</value>
  </data>
  <data name="AllCancelled" xml:space="preserve">
    <value>Canceladas</value>
  </data>
  <data name="AllCompleted" xml:space="preserve">
    <value>Completadas</value>
  </data>
  <data name="AllConfirmed" xml:space="preserve">
    <value>Confirmadas</value>
  </data>
  <data name="AllRejected" xml:space="preserve">
    <value>Rechazadas</value>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>Cancelada</value>
  </data>
  <data name="CancelReschedule" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completada</value>
  </data>
  <data name="Confirmed" xml:space="preserve">
    <value>Confirmada</value>
  </data>
  <data name="ConfirmNewDate" xml:space="preserve">
    <value>Confirma la nueva fecha</value>
  </data>
  <data name="CurrentDate" xml:space="preserve">
    <value>Fecha actual</value>
  </data>
  <data name="Lessons" xml:space="preserve">
    <value>clases</value>
  </data>
  <data name="LessonsLang" xml:space="preserve">
    <value>Clases de {0}</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progreso</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Tarifa</value>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>Rechazada</value>
  </data>
  <data name="RejectReschedule" xml:space="preserve">
    <value>Rechazar</value>
  </data>
  <data name="ScheduledLessons" xml:space="preserve">
    <value>Clases programadas</value>
  </data>
  <data name="SelectNewDate" xml:space="preserve">
    <value>Selecciona la nueva fecha</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Estado</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Unconfirmed" xml:space="preserve">
    <value>Sin confirmar</value>
  </data>
  <data name="ViewBy" xml:space="preserve">
    <value>Ver</value>
  </data>
  <data name="Reschedule" xml:space="preserve">
    <value>Reprogramar</value>
  </data>
  <data name="Unschedule" xml:space="preserve">
    <value>Desprogramar</value>
  </data>
  <data name="CancelUnschedule" xml:space="preserve">
    <value>Cancelar desprogramación</value>
  </data>
  <data name="AcceptUnschedule" xml:space="preserve">
    <value>Aceptar</value>
  </data>
  <data name="RejectUnschedule" xml:space="preserve">
    <value>Rechazar</value>
  </data>
  <data name="ReportIssue" xml:space="preserve">
    <value>Notificar problema</value>
  </data>
  <data name="SelectReportIssues" xml:space="preserve">
    <value>Selecciona al menos un problema a notificar</value>
  </data>
  <data name="TeCollectSolution" xml:space="preserve">
    <value>Marcar la clase como Completada (y cobrar el 100%)</value>
  </data>
  <data name="CommentIssueStudent" xml:space="preserve">
    <value>Añade detalles adicionales sobre el problema (Los comentarios se enviarán a tu profesor)</value>
  </data>
  <data name="CommentIssueTeacher" xml:space="preserve">
    <value>Añade detalles adicionales sobre el problema (Los comentarios se enviarán a tu estudiante)</value>
  </data>
  <data name="HowSolveIssue" xml:space="preserve">
    <value>¿Cómo te gustaría solucionar este problema?</value>
  </data>
  <data name="OtherIssue" xml:space="preserve">
    <value>Otro</value>
  </data>
  <data name="RescheduleSolution" xml:space="preserve">
    <value>Reprogramar la clase</value>
  </data>
  <data name="StudentEarlyIssue" xml:space="preserve">
    <value>El estudiante se marchó pronto</value>
  </data>
  <data name="StudentLateIssue" xml:space="preserve">
    <value>El estudiante llegó tarde</value>
  </data>
  <data name="StudentMissedIssue" xml:space="preserve">
    <value>El estudiante no se presentó a la clase</value>
  </data>
  <data name="StudentTechnicalIssue" xml:space="preserve">
    <value>El estudiante tuvo problemas técnicos</value>
  </data>
  <data name="TeacherEarlyIssue" xml:space="preserve">
    <value>El profesor se marchó pronto</value>
  </data>
  <data name="TeacherLateIssue" xml:space="preserve">
    <value>El profesor llegó tarde</value>
  </data>
  <data name="TeacherMissedIssue" xml:space="preserve">
    <value>El profesor no se presentó a la clase</value>
  </data>
  <data name="TeacherTechnicalIssue" xml:space="preserve">
    <value>El profesor tuvo problemas técnicos</value>
  </data>
  <data name="TeCancelAndRefundHalfSolution" xml:space="preserve">
    <value>Cancelar la clase (y devolver el 50%)</value>
  </data>
  <data name="TeCancelAndRefundSolution" xml:space="preserve">
    <value>Cancelar la clase (y devolver el 100%)</value>
  </data>
  <data name="TeCollectHalfSolution" xml:space="preserve">
    <value>Marcar la clase como Completada (y cobrar el 50%)</value>
  </data>
  <data name="CancelReport" xml:space="preserve">
    <value>Cancelar reporte</value>
  </data>
  <data name="StuCancelAndRefundHalfSolution" xml:space="preserve">
    <value>Cancelar la clase (se devolverá el 50%)</value>
  </data>
  <data name="StuCancelAndRefundSolution" xml:space="preserve">
    <value>Cancelar la clase (se devolverá el 100%)</value>
  </data>
  <data name="StuCollectHalfSolution" xml:space="preserve">
    <value>Marcar clase como completada (se pagará el 50%)</value>
  </data>
  <data name="StuCollectSolution" xml:space="preserve">
    <value>Marcar clase como completada (se pagará el 100%)</value>
  </data>
  <data name="CompleteLesson" xml:space="preserve">
    <value>Completar clase</value>
  </data>
  <data name="AcceptSolution" xml:space="preserve">
    <value>Aceptar solución</value>
  </data>
  <data name="LessonPackCompleted" xml:space="preserve">
    <value>El pack de clases ya está completo</value>
  </data>
  <data name="RejectSolution" xml:space="preserve">
    <value>Rechazar solución</value>
  </data>
  <data name="CancelledPlural" xml:space="preserve">
    <value>Canceladas</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Precio</value>
  </data>
  <data name="Refund" xml:space="preserve">
    <value>Devolución</value>
  </data>
  <data name="Refunds" xml:space="preserve">
    <value>Devoluciones</value>
  </data>
  <data name="CancelMediation" xml:space="preserve">
    <value>Cancelar mediación</value>
  </data>
  <data name="RequestMediation" xml:space="preserve">
    <value>Solicitar mediación</value>
  </data>
  <data name="StudentRequestedMediation" xml:space="preserve">
    <value>El estudiante ha solicitado mediación para resolver un problema. El equipo de Langademy se pondrá en contacto contigo</value>
  </data>
  <data name="TeacherRequestedMediation" xml:space="preserve">
    <value>El profesor ha solicitado mediación para resolver un problema. El equipo de Langademy se pondrá en contacto contigo</value>
  </data>
  <data name="YouRequestedMediation" xml:space="preserve">
    <value>Has solicitado mediación para resolver un problema. El equipo de Langademy se pondrá en contacto contigo</value>
  </data>
  <data name="MedDisagreementStudent" xml:space="preserve">
    <value>¿Por que tu profesor no está de acuerdo con tu solución?</value>
  </data>
  <data name="MedDisagreementTeacher" xml:space="preserve">
    <value>¿Por que tu estudiante no está de acuerdo con tu solución?</value>
  </data>
  <data name="MedIntroStudent" xml:space="preserve">
    <value>Si tuviste problemas con esta clase y no has conseguido acordar una solución con tu profesor usando la funcion Notificar problema, puedes solicitar la mediación de Langademy. La decisión de nuestro equipo será definitiva. Por favor completa el siguiente formulario y nos pondremos en contacto contigo (ten en cuenta que tu profesor también verá lo que escribas)</value>
  </data>
  <data name="MedIntroTeacher" xml:space="preserve">
    <value>Si tuviste problemas con esta clase y no has conseguido acordar una solución con tu estudiante usando la funcion Notificar problema, puedes solicitar la mediación de Langademy. La decisión de nuestro equipo será definitiva. Por favor completa el siguiente formulario y nos pondremos en contacto contigo (ten en cuenta que tu estudiante también verá lo que escribas)</value>
  </data>
  <data name="MedIssueDescr" xml:space="preserve">
    <value>Describe el problema para el que necesitas mediación</value>
  </data>
  <data name="MedProposedSol" xml:space="preserve">
    <value>¿Qué solución propones?</value>
  </data>
  <data name="LessonsUpper" xml:space="preserve">
    <value>Clases</value>
  </data>
</root>