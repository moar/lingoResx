<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptReschedule" xml:space="preserve">
    <value>Accept reschedule</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="AllCancelled" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="AllCompleted" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="AllConfirmed" xml:space="preserve">
    <value>Confirmed</value>
  </data>
  <data name="AllRejected" xml:space="preserve">
    <value>Rejected</value>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="CancelReschedule" xml:space="preserve">
    <value>Cancel reschedule</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="Confirmed" xml:space="preserve">
    <value>Accepted</value>
  </data>
  <data name="ConfirmNewDate" xml:space="preserve">
    <value>Confirm the new date</value>
  </data>
  <data name="CurrentDate" xml:space="preserve">
    <value>Current date</value>
  </data>
  <data name="Lessons" xml:space="preserve">
    <value>lessons</value>
  </data>
  <data name="LessonsLang" xml:space="preserve">
    <value>{0} lessons</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Rate</value>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>Rejected</value>
  </data>
  <data name="RejectReschedule" xml:space="preserve">
    <value>Reject reschedule</value>
  </data>
  <data name="ScheduledLessons" xml:space="preserve">
    <value>Scheduled lessons</value>
  </data>
  <data name="SelectNewDate" xml:space="preserve">
    <value>Select the new date</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Unconfirmed" xml:space="preserve">
    <value>Unconfirmed</value>
  </data>
  <data name="ViewBy" xml:space="preserve">
    <value>View by</value>
  </data>
  <data name="Reschedule" xml:space="preserve">
    <value>Reschedule</value>
  </data>
  <data name="Unschedule" xml:space="preserve">
    <value>Unschedule</value>
  </data>
  <data name="CancelUnschedule" xml:space="preserve">
    <value>Cancel unschedule</value>
  </data>
  <data name="AcceptUnschedule" xml:space="preserve">
    <value>Accept unschedule</value>
  </data>
  <data name="RejectUnschedule" xml:space="preserve">
    <value>Reject unschedule</value>
  </data>
  <data name="ReportIssue" xml:space="preserve">
    <value>Report issue</value>
  </data>
  <data name="SelectReportIssues" xml:space="preserve">
    <value>Select at least one issue to report</value>
  </data>
  <data name="TeCollectSolution" xml:space="preserve">
    <value>Mark lesson as Completed (100% will be collected)</value>
  </data>
  <data name="CommentIssueStudent" xml:space="preserve">
    <value>Explain additional details about the issue (Your comments will be submitted to your teacher)</value>
  </data>
  <data name="CommentIssueTeacher" xml:space="preserve">
    <value>Explain additional details about the issue (Your comments will be submitted to your student)</value>
  </data>
  <data name="HowSolveIssue" xml:space="preserve">
    <value>How would you like to solve this issue?</value>
  </data>
  <data name="OtherIssue" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="RepIssueMaxLength" xml:space="preserve">
    <value>Max length: {0} characters</value>
  </data>
  <data name="RescheduleSolution" xml:space="preserve">
    <value>Reschedule the lesson</value>
  </data>
  <data name="StudentEarlyIssue" xml:space="preserve">
    <value>The student left early</value>
  </data>
  <data name="StudentLateIssue" xml:space="preserve">
    <value>The student arrived late</value>
  </data>
  <data name="StudentMissedIssue" xml:space="preserve">
    <value>The student missed the lesson</value>
  </data>
  <data name="StudentTechnicalIssue" xml:space="preserve">
    <value>The student experienced technical problems</value>
  </data>
  <data name="TeacherEarlyIssue" xml:space="preserve">
    <value>The teacher left early</value>
  </data>
  <data name="TeacherLateIssue" xml:space="preserve">
    <value>The teacher arrived late</value>
  </data>
  <data name="TeacherMissedIssue" xml:space="preserve">
    <value>The teacher missed the lesson</value>
  </data>
  <data name="TeacherTechnicalIssue" xml:space="preserve">
    <value>The teacher experienced technical problems</value>
  </data>
  <data name="TeCancelAndRefundHalfSolution" xml:space="preserve">
    <value>Cancel the lesson (50% will be refunded)</value>
  </data>
  <data name="TeCancelAndRefundSolution" xml:space="preserve">
    <value>Cancel the lesson (100% will be refunded)</value>
  </data>
  <data name="TeCollectHalfSolution" xml:space="preserve">
    <value>Mark lesson as Completed (50% will be collected)</value>
  </data>
  <data name="CancelReport" xml:space="preserve">
    <value>Cancel report</value>
  </data>
  <data name="StuCancelAndRefundHalfSolution" xml:space="preserve">
    <value>Cancel the lesson (50% will be refunded)</value>
  </data>
  <data name="StuCancelAndRefundSolution" xml:space="preserve">
    <value>Cancel the lesson (100% will be refunded)</value>
  </data>
  <data name="StuCollectHalfSolution" xml:space="preserve">
    <value>Mark lesson as Completed (50% will be paid)</value>
  </data>
  <data name="StuCollectSolution" xml:space="preserve">
    <value>Mark lesson as Completed (100% will be paid)</value>
  </data>
  <data name="CompleteLesson" xml:space="preserve">
    <value>Complete lesson</value>
  </data>
  <data name="AcceptSolution" xml:space="preserve">
    <value>Accept solution</value>
  </data>
  <data name="LessonPackCompleted" xml:space="preserve">
    <value>The lesson pack is completed</value>
  </data>
  <data name="RejectSolution" xml:space="preserve">
    <value>RejectSolution</value>
  </data>
  <data name="CancelledPlural" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Refund" xml:space="preserve">
    <value>Refund</value>
  </data>
  <data name="Refunds" xml:space="preserve">
    <value>Refunds</value>
  </data>
  <data name="CancelMediation" xml:space="preserve">
    <value>Cancel mediation</value>
  </data>
  <data name="RequestMediation" xml:space="preserve">
    <value>Request mediation</value>
  </data>
  <data name="StudentRequestedMediation" xml:space="preserve">
    <value>The studentrequested mediation to solve an issue. Langademy team will contact you</value>
  </data>
  <data name="TeacherRequestedMediation" xml:space="preserve">
    <value>The teacher requested mediation to solve an issue. Langademy team will contact you</value>
  </data>
  <data name="YouRequestedMediation" xml:space="preserve">
    <value>You requested mediation to solve an issue. Langademy team will contact you</value>
  </data>
  <data name="MedDisagreementStudent" xml:space="preserve">
    <value>Why does your teacher disagree with your solution?</value>
  </data>
  <data name="MedDisagreementTeacher" xml:space="preserve">
    <value>Why does your student disagree with your solution?</value>
  </data>
  <data name="MedIntroStudent" xml:space="preserve">
    <value>If you had issues with this lesson and you didn't agree on a solution with your teacher using the Report Issue feature, you can request Langademy's mediation. Our team decision will be final. Please, complete the form below and we will contact you (take into account that your teacher will also see what you write)</value>
  </data>
  <data name="MedIntroTeacher" xml:space="preserve">
    <value>If you had issues with this lesson and you didn't agree on a solution with your student using the Report Issue feature, you can request Langademy's mediation. Our team decision will be final. Please, complete the form below and we will contact you (take into account that your student will also see what you write)</value>
  </data>
  <data name="MedIssueDescr" xml:space="preserve">
    <value>Please, describe the problem you need mediation for as accurately as posible</value>
  </data>
  <data name="MedProposedSol" xml:space="preserve">
    <value>Which solution do you propose?</value>
  </data>
  <data name="LessonsUpper" xml:space="preserve">
    <value>Lessons</value>
  </data>
</root>