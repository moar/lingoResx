<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptToConfirm" xml:space="preserve">
    <value>Si quieres hablar con {0} clica Aceptar conversación para confirmar tu asistencia</value>
  </data>
  <data name="ConversationFinallyCanceled" xml:space="preserve">
    <value>Ups...parece que {0} al final canceló esta solicitud de conversación</value>
  </data>
  <data name="ConversationNotFound" xml:space="preserve">
    <value>No se ha encontrado la conversación</value>
  </data>
  <data name="MeetupCancelledByNativeMessage" xml:space="preserve">
    <value>Ooopss...parece que {0} al final canceló tu conversación</value>
  </data>
  <data name="MeetupCancelledByStudentMessage" xml:space="preserve">
    <value>Oopsss... parece que al final cancelaste la conversación con {0}</value>
  </data>
  <data name="MeetupFinallyCanceled" xml:space="preserve">
    <value>Ups... parece que {0} al final canceló la conversación</value>
  </data>
  <data name="MyConversations" xml:space="preserve">
    <value>Mis conversaciones</value>
  </data>
  <data name="PracticeRequest" xml:space="preserve">
    <value>{0} quiere practicar {1} contigo</value>
  </data>
  <data name="PracticeRequested" xml:space="preserve">
    <value>{0} quería practicar {1} contigo</value>
  </data>
  <data name="ReceivedRequests" xml:space="preserve">
    <value>Solicitudes recibidas</value>
  </data>
  <data name="RequestRejectedByNativeMessage" xml:space="preserve">
    <value>Ooopsss... parece que {0} no puede aceptar tu soliticud de conversación</value>
  </data>
  <data name="RequestStatusRequestedMessage" xml:space="preserve">
    <value>{0} no ha leido tu solicitud de conversación aun</value>
  </data>
  <data name="SameTimeRequests" xml:space="preserve">
    <value>Recibiste {0} solicitudes de conversación más para hablar a la misma hora. Revisa tus solicitudes de amistad en la bandeja de entrada</value>
  </data>
  <data name="SentRequests" xml:space="preserve">
    <value>Solicitudes enviadas</value>
  </data>
  <data name="StudentReqAccepted" xml:space="preserve">
    <value>Aceptado</value>
  </data>
  <data name="StudentReqAcceptMeetup" xml:space="preserve">
    <value>Aceptar conversación</value>
  </data>
  <data name="StudentReqCancelled" xml:space="preserve">
    <value>Cancelado</value>
  </data>
  <data name="StudentReqCancelMeetup" xml:space="preserve">
    <value>Cancelar quedada</value>
  </data>
  <data name="StudentReqCancelRequest" xml:space="preserve">
    <value>Cancelar solicitud</value>
  </data>
  <data name="StudentReqEnter" xml:space="preserve">
    <value>Entrar</value>
  </data>
  <data name="StudentReqFinallyCancelled" xml:space="preserve">
    <value>Ups...parece que al final cancelaste la solicitud de conversación</value>
  </data>
  <data name="StudentReqFollowLink" xml:space="preserve">
    <value>Sigue este link para entrar a la sala de la conversación</value>
  </data>
  <data name="StudentReqMeetupCancelled" xml:space="preserve">
    <value>Conversación cancelada</value>
  </data>
  <data name="StudentReqMessages" xml:space="preserve">
    <value>Mensajes</value>
  </data>
  <data name="StudentReqMissSentence" xml:space="preserve">
    <value>Una pena que no confirmaras antes esta solicitud. Estate atento a Langademy y no pierdas más solicitudes ;-)</value>
  </data>
  <data name="StudentReqOtherReq" xml:space="preserve">
    <value>No puedes aceptar esta conversación porque has aceptado otra conversación a la misma hora,</value>
  </data>
  <data name="StudentReqPending" xml:space="preserve">
    <value>Pendiente</value>
  </data>
  <data name="StudentReqProposal" xml:space="preserve">
    <value>Propuesta</value>
  </data>
  <data name="StudentReqRateOnRequest" xml:space="preserve">
    <value>Tarifa en la fecha de solicitud</value>
  </data>
  <data name="StudentReqReject" xml:space="preserve">
    <value>Rechazar</value>
  </data>
  <data name="StudentReqRejected" xml:space="preserve">
    <value>Rechazado</value>
  </data>
  <data name="StudentReqRequestFor" xml:space="preserve">
    <value>Solicitud para</value>
  </data>
  <data name="StudentReqTBConv" xml:space="preserve">
    <value>Conversación de Banco de Tiempo</value>
  </data>
  <data name="StudentReqWalletConv" xml:space="preserve">
    <value>Conversación Wallet</value>
  </data>
  <data name="StudentReqWriteMessage" xml:space="preserve">
    <value>Escribe tu mensaje</value>
  </data>
  <data name="TBConversation" xml:space="preserve">
    <value>Conversación Banco de tiempo</value>
  </data>
  <data name="VideoCallMessage" xml:space="preserve">
    <value>¡Bien! {0} y tú vais a tener una conversación. Estate atento a Langademy y no te pierdas la conversación. ¡Se puntual!</value>
  </data>
  <data name="WalletConversation" xml:space="preserve">
    <value>Conversación Wallet</value>
  </data>
  <data name="YouConversationRejected" xml:space="preserve">
    <value>Rechazaste la conversacion con {0}</value>
  </data>
  <data name="NoConversations" xml:space="preserve">
    <value>No has programado ninguna conversación</value>
  </data>
</root>